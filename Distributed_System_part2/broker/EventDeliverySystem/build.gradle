/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // metadata-extractor dependency
    implementation group: 'com.drewnoakes', name: 'metadata-extractor', version: '2.17.0'
}

application {
    // Define the main class for the application.
    mainClass = 'Distributed_System_part2.EventDeliverySystem'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': 'Distributed_System_part1.EventDeliverySystem'
    }
    // Will include every single one of your dependencies, project or not
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task runBroker(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'Distributed_System_part2.EventDeliverySystem'
    args 'broker'
}

task runUserNode(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'Distributed_System_part2.EventDeliverySystem'
    standardInput = System.in
    args 'usernode'
}

task runbro(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'Distributed_System_part2.EventDeliverySystem'
    args 'broker'
}

task runuser(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'Distributed_System_part2.EventDeliverySystem'
    standardInput = System.in
    args 'usernode'
}

task runuse(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'Distributed_System_part2.EventDeliverySystem'
    standardInput = System.in
    args 'usernode'
}