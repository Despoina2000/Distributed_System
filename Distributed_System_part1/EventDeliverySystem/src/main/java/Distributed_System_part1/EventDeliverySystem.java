/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Distributed_System_part1;

import Distributed_System_part1.Nodes.Broker;
import Distributed_System_part1.Nodes.UserNode;
import Distributed_System_part1.Util.Util;
import com.drew.imaging.ImageMetadataReader;
import com.drew.imaging.ImageProcessingException;
import com.drew.metadata.Metadata;
import com.drew.metadata.Directory;
import com.drew.metadata.MetadataException;
import com.drew.metadata.Tag;
import com.drew.metadata.exif.ExifDirectoryBase;
import com.drew.metadata.exif.ExifIFD0Directory;
import com.drew.metadata.exif.ExifImageDirectory;
import com.drew.metadata.exif.ExifSubIFDDirectory;
import com.drew.metadata.jpeg.JpegDirectory;

import java.io.File;
import java.io.IOException;

import java.util.Locale;

public class EventDeliverySystem {

    public static void main(String[] args) {
        if (args[0].toLowerCase(Locale.ROOT).startsWith("use")) {
            UserNode userNode = new UserNode();
        } else if (args[0].toLowerCase(Locale.ROOT).startsWith("bro")) {
            Thread brokerThread = new Thread(new Broker());
            brokerThread.start();
        } else if (args[0].toLowerCase(Locale.ROOT).startsWith("test")) {
            File file = new File(
                    Thread.currentThread().getContextClassLoader().getResource("videos/birds.mp4").getPath());
            try {
                Metadata metadata = ImageMetadataReader.readMetadata(file);
                //
                // A Metadata object contains multiple Directory objects
                //
                for (Directory directory : metadata.getDirectories()) {
                    //
                    // Each Directory stores values in Tag objects
                    //
                    for (Tag tag : directory.getTags()) {
                        if (tag.getTagName().toLowerCase(Locale.ROOT).equals("file name"))
                            System.out.println(tag.getDescription());
                        if (tag.getTagName().toLowerCase(Locale.ROOT).equals("file size"))
                            System.out.println(tag.getDescription().substring(0,tag.getDescription().length() - 6));
                        if (tag.getTagName().toLowerCase(Locale.ROOT).contains("width") && !tag.getTagName().toLowerCase(Locale.ROOT).contains("thumbnail"))
                            System.out.println(tag.getDescription().substring(0,tag.getDescription().length() - 7));
                        if (tag.getTagName().toLowerCase(Locale.ROOT).contains("height") && !tag.getTagName().toLowerCase(Locale.ROOT).contains("thumbnail"))
                            System.out.println(tag.getDescription().substring(0,tag.getDescription().length() - 7));
                        if (tag.getTagName().toLowerCase(Locale.ROOT).equals("duration"))
                            System.out.println(tag.getDescription());
                        if (tag.getTagName().toLowerCase(Locale.ROOT).equals("frame rate"))
                            System.out.println(tag.getDescription());
                    }
                }
            } catch (ImageProcessingException | IOException e) {
                e.printStackTrace();
            }
        }
    }
}
